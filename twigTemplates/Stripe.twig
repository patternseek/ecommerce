{# @var this \PatternSeek\ECommerce\Stripe #}
{# @var exec \PatternSeek\ComponentView\ExecHelper #}
{# @var state \PatternSeek\ECommerce\ViewState\StripeState #}
<form id="payment-form">
    <div style="display: none;" id="formHide">
        <fieldset>
        <legend>{{ state.trans.card_details }}</legend>

            <label for="card-element">
                {{ state.trans.credit_or_debit_card }}
            </label>
            <div id="card-element">
                <!-- a Stripe Element will be inserted here. -->
            </div>

            <!-- Used to display form errors -->
            <div id="card-errors" role="alert"></div>
            <br>
        <input type="submit" value="{{ state.trans.submit_payment }}">
        </fieldset>
    </div>
</form>

{{ exec.wrapForm( "completion", 'POST', formBody, false, "completion-form" ) }}

<script type="text/javascript">

    jQuery(function ($) {

        var stripe = Stripe('{{ state.apiPubKey }}');
        var elements = stripe.elements();
        var cardEl = elements.create(
            'card',
            {
                hidePostalCode: true,
            }
        );
        cardEl.mount('#card-element');
        $('#formHide').slideDown();

        $('#payment-form').submit(function (e) {
            $('.payment-errors').html("");
            var form = $(this);
            // Disable the submit button to prevent repeated clicks
            form.find('input[type="submit"]').prop('disabled', true);

            stripe.createPaymentMethod(
                'card',
                cardEl,
                {
                    'billing_details':
                        {
                            'address':
                                {
                                    'line1': '{{ state.address.addressLine1 }}',
                                    'line2': '{{ state.address.addressLine2 }}',
                                    'city': '{{ state.address.townOrCity }}',
                                    'state': '{{ state.address.stateOrRegion }}',
                                    'postal_code': '{{ state.address.postCode }}',
                                    'country': '{{ state.address.countryString }}'
                                }
                        }
                }
            ).then(function (result) {
                if (result.error) {
                    showStripeError(result);
                } else {
                    fetch('{{ exec.url( "confirmPayment", [], true ) }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            payment_method_id: result.paymentMethod.id
                        })
                    }).then(function (result) {
                        // Handle server response (see Step 3)
                        result.json().then(function (json) {
                            handleServerResponse(json, stripe);
                        })
                    });
                }
            });
            return false;
        });

    });

    function handleServerResponse(response, stripe) {
        if (response.error) {
            // Show error from server on payment form
            showStripeError(response);
        } else if (response.requires_action) {
            // Use Stripe.js to handle required card action
            handleAction(response, stripe);
        } else {
            // Success
            submitCompletionForm(response.paymentIntentId);
        }
    }

    function handleAction(response, stripe) {
        stripe.handleCardAction(
            response.payment_intent_client_secret
        ).then(function (result) {
            if (result.error) {
                // Show error in payment form
                showStripeError(result)
            } else {
                // Success
                submitCompletionForm(result.paymentIntent.id);
            }
        });
    }

    function showStripeError(result) {
        // Inform the user if there was an error
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error;
        // Re-enable the form
        var form = $('#payment-form');
        form.find('input[type="submit"]').prop('disabled', false);
    }

    function submitCompletionForm(paymentIntentId) {
        var form = $('#completion-form');
        form.append($('<input type="hidden" name="paymentIntentId" />').val(paymentIntentId));
        // and re-submit
        form.get(0).submit();
    };
    
</script>
